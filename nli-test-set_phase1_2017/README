This directory contains the test data for Phase 1 of the 2017 NLI Shared Task including the data 
for the Essay-only and the Speech-only tracks.

To copy this test data into the nli project released in May, use the  "copy_test_data.py" 
script, invoked as follows:

    $ python copy_test_data.py <path/to/project>

You will need to remove or rename any existing 'test' directories in the project.


To make the baseline scripts run on this test data, you need to make the following 3 changes in "baseline_util.py":

	1) Change line 29 from
		    `'ARA', 'CHI', 'FRE', 'GER', 'HIN', 'ITA', 'JPN', 'KOR', 'SPA', 'TEL', 'TUR'`
		to
		    `'ARA', 'CHI', 'FRE', 'GER', 'HIN', 'ITA', 'JPN', 'KOR', 'SPA', 'TEL', 'TUR', 'X'`


	2) Change lines 178-9 from
		```
		test_labels_path = ("{script_dir}/../data/labels/{test}/labels.{test}.csv"
	                         .format(test=test_partition, script_dir=SCRIPT_DIR))
		```
		to
		```
	    test_labels_path = ("{script_dir}/../data/labels/{test}/{task}.labels.{test}.csv"
	                         .format(test=test_partition, task="essay" if baseline == "essays" else "speech", 
	                                 script_dir=SCRIPT_DIR))
		```

	3) Change lines 469-71 from
	    ```
        labels_file_path = ('{script_dir}/../data/labels/{test}/labels.{test}.csv'
                    .format(script_dir=SCRIPT_DIR,
                            test=test_partition_name))
	    ```
	    to

	    ```
        labels_file_path = ("{script_dir}/../data/labels/{test}/{task}.labels.{test}.csv"
                     .format(test=test_partition_name, task="essay" if baseline == "essays" else "speech", 
                             script_dir=SCRIPT_DIR))
	    ```
	 
    4) Change lines 312-3 from
        ```
        labels_file_path = ("{script_dir}/../data/labels/{part}/labels.{part}.csv"
                    .format(script_dir=SCRIPT_DIR, part=partition_name))
        ```
        to
        ```
        if partition_name == 'test':
            labels_file_path = ("{script_dir}/../data/labels/{test}/{task}.labels.{test}.csv".format(test=partition_name, task="speech", script_dir=SCRIPT_DIR))
	    else:
	        labels_file_path = ("{script_dir}/../data/labels/{part}/labels.{part}.csv"
	                        .format(script_dir=SCRIPT_DIR, part=partition_name))
        ```

To avoid the baseline evaluating the predictions (since the ground truth is not contained in the labels file) 
comment out the following line from the baseline:

    `display_classification_results(encoded_test_labels, predicted)`

